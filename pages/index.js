import Head from 'next/head'
import { useEffect, useState } from 'react'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { Select, Button, useToast } from "@chakra-ui/react"
import { useRouter } from 'next/router'
import axios from 'axios'

export default function Home() {
	const [filterData, setFilterData] = useState({ genres: "", language: "" })
	const [generes, setGenres] = useState([]);
	const [languages, setLanguages] = useState([]);

	const toast = useToast()

	const router = useRouter()

	useEffect(() => {
		getGenres();
		getLanguages()
	}, []);

	const handleChange = (event) => {
		setFilterData({ ...filterData, [event.target.name]: event.target.value })
	}

	const handleRoute = () => {
		if (filterData.genres !== "" && filterData.language !== "") {
			router.push(`/movies?genres=${filterData.genres}&language=${filterData.language}`)
		} else {
			toast({
				title: "Please select the fields and go!",
				description: "",
				status: "error",
				duration: 2000,
				isClosable: true,
			})
		}
	}

	const getGenres = () => {
		var options = {
			method: "GET",
			url: "https://api.themoviedb.org/3/genre/movie/list",
			params: {
				api_key: "30e62b9285c0d60c99033e04ad82abac",
				language: "en-US",
				page: "1",
			},
		};

		axios
			.request(options)
			.then(function (response) {
				setGenres(response.data.genres);
				console.log(response);
			})
			.catch(function (error) {
				console.error(error);
			});
	};

	const getLanguages = () => {
		var options = {
			method: "GET",
			url: "https://api.themoviedb.org/3/configuration/languages",
			params: {
				api_key: "30e62b9285c0d60c99033e04ad82abac"
			},
		};

		axios
			.request(options)
			.then(function (response) {
				setLanguages(response.data);
			})
			.catch(function (error) {
				console.error(error);
			});
	};

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div className={styles.home}>
				<div className="container">
					<div className={styles.selectType}>
						<h2 style={{ marginBottom: '10px' }}>Select Movie genres and language</h2>
						<Select placeholder="Select Generes" name="genres" className={styles.select} onChange={handleChange}>
							{generes && generes.map(((i, index) => (

								<option value={i.id} key={index}>{i.name}</option>
							)))}

						</Select>
						<Select placeholder="Select Language" name="language" className={styles.select} onChange={handleChange}>
							{languages.map((i, index) => (

								<option value={i.iso_639_1} key={index}>{i.english_name}</option>
							))}
						</Select>
						<Button colorScheme="blue" type="button" onClick={handleRoute}>GO</Button>
					</div>
				</div>
			</div>
		</>


	)
}
